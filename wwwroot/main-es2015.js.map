{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add-tournament/add-tournament.component.ts","./src/app/add-tournament/add-tournament.component.html","./src/app/add-tournament/player-checkbox/player-checkbox.component.ts","./src/app/add-tournament/player-checkbox/player-checkbox.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/edit-tournament/edit-tournament.component.ts","./src/app/edit-tournament/edit-tournament.component.html","./src/app/guards/auth.guard.ts","./src/app/infrastructure/models/FilterLogicalOperators.ts","./src/app/infrastructure/models/PaginatedRequest.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/register-dialog/register-dialog.component.ts","./src/app/login/register-dialog/register-dialog.component.html","./src/app/main-nav/main-nav.component.ts","./src/app/main-nav/main-nav.component.html","./src/app/my-achievements/my-achievements.component.ts","./src/app/my-achievements/my-achievements.component.html","./src/app/players-table/delete-player-dialog/delete-player-dialog.component.ts","./src/app/players-table/delete-player-dialog/delete-player-dialog.component.html","./src/app/players-table/players-table.component.ts","./src/app/players-table/players-table.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/services/account.service.ts","./src/app/services/player.service.ts","./src/app/services/shared/data.service.ts","./src/app/services/tournamnet-table.service.ts","./src/app/settings/settings.component.ts","./src/app/settings/settings.component.html","./src/app/tournament-table/add-tournament-dialog/add-tournament-dialog.component.ts","./src/app/tournament-table/add-tournament-dialog/add-tournament-dialog.component.html","./src/app/tournament-table/delete-dialog/delete-dialog.component.ts","./src/app/tournament-table/delete-dialog/delete-dialog.component.html","./src/app/tournament-table/tournament-table.component.ts","./src/app/tournament-table/tournament-table.component.html","./src/app/view-tournament/view-tournament.component.ts","./src/app/view-tournament/view-tournament.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../services/shared/data.service';\r\nimport { IPlayer } from '../models/player.model';\r\nimport { Subject } from 'rxjs';\r\nimport { TournamentTableService } from '../services/tournamnet-table.service';\r\nimport { Router } from '@angular/router';\r\nimport { GameDto } from '../models/tournament-table.model';\r\n\r\n\r\ntype TableCell = {\r\n  row: number;\r\n  column: number;\r\n  checked: boolean | string;\r\n  playerIdByRow: number;\r\n};\r\n\r\n@Component({\r\n  selector: 'add-tournament',\r\n  templateUrl: './add-tournament.component.html',\r\n  styleUrls: ['./add-tournament.component.css']\r\n})\r\n\r\nexport class AddTournamentComponent implements OnInit {\r\n\r\n  deselectMatchUp$: Subject<boolean> = new Subject();\r\n\r\n  constructor(private dataService: DataService, private postTournamentService: TournamentTableService, private router: Router) {\r\n    this.scoreTable = this.generateInitialTable();\r\n\r\n  }\r\n\r\n  players: IPlayer[] = [];\r\n  scoreTable: TableCell[][];\r\n  tournamentName: string;\r\n\r\n\r\n  ngOnInit() {\r\n    this.players = this.dataService.getData() ;\r\n    this.tournamentName = this.dataService.getName();\r\n    console.log(this.players);\r\n    this.scoreTable = this.generateInitialTable();\r\n  }\r\n\r\n  async saveTournament() {\r\n    const tournament = this.createTournamentDto();\r\n    console.log(\"fromUI\", tournament);\r\n    this.postTournamentService.postTournament(tournament).subscribe(x => {\r\n      console.log(\"fromDb\", x);\r\n      this.router.navigate(['tournament-table']);\r\n    });\r\n  }\r\n\r\n  createTournamentDto() {\r\n    const Games: GameDto[] = [];\r\n\r\n    for (let i = 0; i < this.scoreTable.length; i++) {\r\n      for (let j = i + 1; j < this.scoreTable.length; j++) {\r\n        const player1 = this.scoreTable[i][j];\r\n        const player2 = this.scoreTable[j][i];\r\n        const Game: GameDto = {\r\n          playerGames: [\r\n            {\r\n              playerId: player1.playerIdByRow,\r\n              isWinner: !!player1.checked\r\n            },\r\n            {\r\n              playerId: player2.playerIdByRow,\r\n              isWinner: !!player2.checked\r\n            }\r\n          ]\r\n        }\r\n        Games.push(Game);\r\n      }\r\n    }\r\n    const tournament = {\r\n      name: this.tournamentName,\r\n      games: Games\r\n    }\r\n    return tournament;\r\n  }\r\n\r\n  playerUpdated(cell: TableCell) {\r\n    if (cell.checked) {\r\n      this.scoreTable[cell.column][cell.row].checked = false;\r\n    }\r\n    const arrayOfBooleans = this.scoreTable.map(x => x.map(y => y.checked));\r\n    console.log('arrayOfBooleans', arrayOfBooleans);\r\n    console.log('this.scoreTable', this.scoreTable);\r\n  }\r\n\r\n  generateInitialTable(): TableCell[][] {\r\n    const table: TableCell[][] = [];\r\n\r\n    for (let i = 0; i < this.players.length; ++i) {\r\n      table.push([]);\r\n      for (let j = 0; j < this.players.length; ++j) {\r\n        const obj: TableCell = {\r\n          row: i,\r\n          column: j,\r\n          checked: i === j ? \"x\" : false,\r\n          playerIdByRow: this.players[i].id\r\n        }\r\n        table[i].push(obj);\r\n      }\r\n    }\r\n    return table;\r\n  }\r\n\r\n  routeToTournamentTablePage() {\r\n    this.router.navigate(['tournament-table']);\r\n  }\r\n}\r\n","<p>{{tournamentName}}</p>\n\n<div class=\"table\">\n  <div class=\"row\">\n    <div class=\"cell\"></div>\n    <div *ngFor=\"let player of players\" class=\"cell player\" >\n      {{player.userName}}\n    </div>\n  </div>\n  <div *ngFor=\"let row of scoreTable; index as i;\" class=\"row\">\n    <div class=\"cell player\">\n      {{players[i].userName}}\n    </div>\n\n    <div *ngFor=\"let cell of row; index as j\" class=\"cell\">\n      <mat-checkbox type=\"checkbox\" *ngIf=\"cell.checked !== 'x'\" [(ngModel)]=\"cell.checked\"(ngModelChange)=\"playerUpdated(cell)\"></mat-checkbox>\n    </div>\n  </div>\n</div>\n\n<button mat-raised-button color=\"primary\" class = \"save\" (click)=\"saveTournament()\">Save</button>\n<button mat-raised-button color=\"warn\" class = \"cancel\" (click)=\"routeToTournamentTablePage()\">Cancel</button>","import { Component, OnInit, Input, EventEmitter, Output, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-player-checkbox',\r\n  templateUrl: './player-checkbox.component.html',\r\n  styleUrls: ['./player-checkbox.component.css']\r\n})\r\nexport class PlayerCheckboxComponent implements OnInit, OnDestroy {\r\n  @Input() row: number;\r\n  @Input() column: number;\r\n  @Input() cell: any;\r\n  @Input() deselectMatchUp$: Subject<boolean>;\r\n  @Input() scoreTable: any;\r\n  @Output() matchUpSelected$: EventEmitter<any> = new EventEmitter();\r\n  @Output() cellChange = new EventEmitter();\r\n\r\n  private onDestroy$: Subject<null> = new Subject();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.deselectMatchUp$.pipe(\r\n      takeUntil(this.onDestroy$),\r\n      tap((x: any) => {\r\n        if (this.row === x.column && this.column === x.row) {\r\n          this.cell = false;\r\n          this.cellChange.emit(false);\r\n        }\r\n      })\r\n    ).subscribe()\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onDestroy$.next();\r\n    this.onDestroy$.complete();\r\n  }\r\n\r\n  matchUpSelected(row: number, column: number, checked: boolean) {\r\n    this.cellChange.emit(checked);\r\n    this.matchUpSelected$.emit({ row, column, checked});\r\n  }\r\n\r\n}","<mat-checkbox *ngIf=\"cell !== 'x'\" [(ngModel)]=\"cell\" (change)=\"matchUpSelected(row, column, cell)\"></mat-checkbox>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TournamentTableComponent } from './tournament-table/tournament-table.component';\nimport { MyAchievementsComponent } from './my-achievements/my-achievements.component';\nimport { AddTournamentComponent } from './add-tournament/add-tournament.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { EditTournamentComponent } from './edit-tournament/edit-tournament.component';\nimport { LoginComponent } from './login/login.component';\nimport { MainNavComponent } from './main-nav/main-nav.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { PlayersTableComponent } from './players-table/players-table.component';\nimport { ViewTournamentComponent } from './view-tournament/view-tournament.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  {\n    path: '',\n    component: MainNavComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: 'tournament-table', component: TournamentTableComponent },\n      { path: \"my-achievements\", component: MyAchievementsComponent },\n      { path: \"add-tournament\", component: AddTournamentComponent },\n      { path: \"edit-tournament\", component:EditTournamentComponent},\n      { path: \"view-tournament\", component:ViewTournamentComponent},\n      { path: \"settings\", component: SettingsComponent },\n      { path: \"players-table\", component: PlayersTableComponent },\n      { path: \"profile\", component: ProfileComponent }\n    ]\n  },\n  { path: '**', redirectTo: 'login', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ExerciseUI';\n}\n","\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MainNavComponent } from './main-nav/main-nav.component';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule} from '@angular/material/input';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { TournamentTableComponent } from './tournament-table/tournament-table.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MyAchievementsComponent } from './my-achievements/my-achievements.component';\r\nimport { AddTournamentComponent } from './add-tournament/add-tournament.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatDialogModule} from '@angular/material/dialog';\r\nimport { MatSelectModule} from '@angular/material/select';\r\nimport { MatCheckboxModule} from '@angular/material/checkbox';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatGridListModule} from '@angular/material/grid-list';\r\nimport { AddTournamentDialogComponent } from './tournament-table/add-tournament-dialog/add-tournament-dialog.component';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { PlayerCheckboxComponent } from './add-tournament/player-checkbox/player-checkbox.component';\r\nimport { EditTournamentComponent } from './edit-tournament/edit-tournament.component';\r\nimport { DeleteDialogComponent } from './tournament-table/delete-dialog/delete-dialog.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterDialogComponent } from './login/register-dialog/register-dialog.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { PlayersTableComponent } from './players-table/players-table.component';\r\nimport { DeletePlayerDialogComponent } from './players-table/delete-player-dialog/delete-player-dialog.component';\r\nimport { MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport { ViewTournamentComponent } from './view-tournament/view-tournament.component';\r\nimport { SocialLoginModule, AuthServiceConfig } from 'angularx-social-login';\r\nimport { GoogleLoginProvider } from 'angularx-social-login';\r\n\r\nlet config = new AuthServiceConfig([\r\n  {\r\n     id: GoogleLoginProvider.PROVIDER_ID,\r\n     provider: new GoogleLoginProvider(\"435504687783-jmg1heitefdgadc0r9svk92itrgi4581.apps.googleusercontent.com\")\r\n  }\r\n]);\r\nexport function provideConfig()\r\n {\r\n    return config;\r\n }\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainNavComponent,\r\n    TournamentTableComponent,\r\n    MyAchievementsComponent,\r\n    AddTournamentComponent,\r\n    SettingsComponent,\r\n    ProfileComponent,\r\n    AddTournamentDialogComponent,\r\n    PlayerCheckboxComponent,\r\n    EditTournamentComponent,\r\n    DeleteDialogComponent,\r\n    LoginComponent,\r\n    RegisterDialogComponent,\r\n    PlayersTableComponent,\r\n    DeletePlayerDialogComponent,\r\n    ViewTournamentComponent  \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatGridListModule,\r\n    HttpClientModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    FormsModule,\r\n    MatProgressBarModule,\r\n    ReactiveFormsModule,\r\n    MatSnackBarModule,\r\n    NgMultiSelectDropDownModule.forRoot(),\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: () => localStorage.getItem('accessToken'),\r\n        whitelistedDomains: [environment.whitelistedDomainsForSendingToken],\r\n        blacklistedRoutes: [environment.blacklistedRoutes]\r\n   }}),\r\n   SocialLoginModule.initialize(config)\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    {\r\n      provide: AuthServiceConfig,\r\n      useFactory: provideConfig\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../services/shared/data.service';\r\nimport { TournamentTableService } from '../services/tournamnet-table.service';\r\nimport { TournamentDto, GameDto } from '../models/tournament-table.model';\r\nimport { Router } from '@angular/router';\r\nimport { TournamentPlayer } from '../services/player.service';\r\n\r\ntype TableCell = {\r\n  row: number;\r\n  column: number;\r\n  checked: boolean | string;\r\n  playerIdByRow: number;\r\n};\r\n\r\n@Component({\r\n  selector: 'edit-tournament',\r\n  templateUrl: './edit-tournament.component.html',\r\n  styleUrls: ['./edit-tournament.component.css']\r\n})\r\nexport class EditTournamentComponent implements OnInit {\r\n\r\n  id: number;\r\n  players: any[] = [];\r\n  newGameList: any[] = [];\r\n  scoreTable: TableCell[][] = [];\r\n  tournament: TournamentDto;\r\n\r\n  constructor(private dataService: DataService, private editTournamentService: TournamentTableService, private router: Router, private playerService: TournamentPlayer) { }\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.dataService.getId();\r\n    this.editTournamentService.getTournamentById(this.id).subscribe(x => this.onTour(x));\r\n  }\r\n\r\n  async onTour(tour) {\r\n\r\n    this.tournament = tour;\r\n    this.newGameList = this.prepareGameList(this.tournament.games);\r\n    const firstRow = this.newGameList[0];\r\n    const firstPlayerId = firstRow[0].playerGames[0].playerId;\r\n    const player1 = await this.playerService.getPlayerById(firstPlayerId).toPromise();\r\n    const firstPlayer = { id: firstPlayerId, userName: player1.userName }\r\n    this.players = await Promise.all([firstPlayer, ...this.newGameList[0].map(async (games) => {\r\n      const secondPlayerId = games.playerGames.filter(el => el.playerId !== firstPlayerId)[0].playerId;\r\n      const player = await this.playerService.getPlayerById(secondPlayerId).toPromise();\r\n      return { id: secondPlayerId, userName: player.userName };\r\n    })]);\r\n\r\n    this.scoreTable = this.generateInitialTable();\r\n    this.populateTable(this.scoreTable);\r\n  }\r\n\r\n\r\n  playerUpdated(cell: TableCell) {\r\n    if (cell.checked) {\r\n      this.scoreTable[cell.column][cell.row].checked = false;\r\n    }\r\n    const arrayOfBooleans = this.scoreTable.map(x => x.map(y => y.checked));\r\n    console.log('arrayOfBooleans', arrayOfBooleans);\r\n    console.log('this.scoreTable', this.scoreTable);\r\n  }\r\n\r\n  prepareGameList(games) {\r\n    const list = games.slice();\r\n    const result = [];\r\n    list.reverse();\r\n    let counter = 1;\r\n\r\n    while (list.length) {\r\n      const removed = list.splice(0, counter);\r\n      result.push(removed.reverse());\r\n      counter++;\r\n    }\r\n    return result.reverse();\r\n  }\r\n\r\n  generateInitialTable() {\r\n    const table = [];\r\n\r\n    for (let i = 0; i < this.players.length; ++i) {\r\n      table.push([]);\r\n      for (let j = 0; j < this.players.length; ++j) {\r\n        const obj = {\r\n          row: i,\r\n          column: j,\r\n          checked: i === j ? \"x\" : false,\r\n          playerIdByRow: 1\r\n        }\r\n        table[i].push(obj);\r\n      }\r\n    }\r\n    return table;\r\n  }\r\n\r\n  populateTable(table) {\r\n    for (let i = 0; i < this.players.length; i++) {\r\n      const listForRow = this.newGameList[i];\r\n      const rowPlayerId = this.players[i].id; \r\n      for (let j = i + 1; j < this.players.length; j++) {\r\n        const game = listForRow[j - i - 1];\r\n        const playerGame1 = game.playerGames.find(el => el.playerId === rowPlayerId);\r\n        const playerGame2 = game.playerGames.find(el => el.playerId !== rowPlayerId);\r\n        const obj = {\r\n          row: i,\r\n          column: j,\r\n          checked: i === j ? \"x\" : playerGame1.isWinner,\r\n          playerIdByRow: playerGame1.playerId,\r\n          id: playerGame1.gameId\r\n        }\r\n        table[i][j] = obj;\r\n\r\n        const obj2 = {\r\n          row: j,\r\n          column: i,\r\n          checked: i === j ? \"x\" : playerGame2.isWinner,\r\n          playerIdByRow: playerGame2.playerId,\r\n          id: playerGame2.gameId\r\n        }\r\n        table[j][i] = obj2;\r\n      }\r\n    }\r\n  }\r\n  \r\n  createTournamentDto() {\r\n    const Games: GameDto[] = [];\r\n\r\n    for (let i = 0; i < this.scoreTable.length; i++) {\r\n      for (let j = i + 1; j < this.scoreTable.length; j++) {\r\n        const player1 = this.scoreTable[i][j];\r\n        const player2 = this.scoreTable[j][i];\r\n        const Game: GameDto = {\r\n          playerGames: [\r\n            {\r\n              playerId: player1.playerIdByRow,\r\n              isWinner: !!player1.checked,\r\n            },\r\n            {\r\n              playerId: player2.playerIdByRow,\r\n              isWinner: !!player2.checked,\r\n            }\r\n          ],\r\n          tournamentId: this.tournament.id,\r\n        }\r\n        Games.push(Game);\r\n      }\r\n    }\r\n\r\n    const GamesWithId = Games.map((game, index) => {\r\n      game.id = this.tournament.games[index].id\r\n      game.playerGames = game.playerGames.map((playerGame, idx) => {\r\n        playerGame.gameId = game.id;\r\n        playerGame.id = this.tournament.games[index].playerGames[idx].id;\r\n        return playerGame\r\n      })\r\n      return game;\r\n    })\r\n\r\n    const tournament = {\r\n      name: this.tournament.name,\r\n      games: GamesWithId,\r\n      id: this.tournament.id\r\n    }\r\n    return tournament;\r\n  }\r\n\r\n  async saveTournament() {\r\n    const tournament = this.createTournamentDto();\r\n    console.log({ tournament })\r\n    this.editTournamentService.updateTournament(tournament).subscribe(x => {\r\n      console.log(x);\r\n      this.router.navigate(['tournament-table']);\r\n    });\r\n  }\r\n\r\n  routeToTournamentTablePage() {\r\n    this.router.navigate(['tournament-table']);\r\n  }\r\n\r\n}\r\n","<p *ngIf=\"tournament\">{{tournament.name}}</p>\n\n<div class=\"table\">\n  <div class=\"row\">\n    <div class=\"cell\"></div>\n    <div *ngFor=\"let player of players\" class=\"cell player\">\n      {{player.userName}}\n    </div>\n  </div>\n  <div *ngFor=\"let row of scoreTable; index as i;\" class=\"row\">\n    <div class=\"cell player\">\n      {{players[i].userName}}\n    </div>\n\n    <div  *ngFor=\"let cell of row; index as j\" class=\"cell\">\n      <mat-checkbox  type=\"checkbox\" *ngIf=\"cell.checked !== 'x'\" [(ngModel)]=\"cell.checked\"\n        (ngModelChange)=\"playerUpdated(cell)\"></mat-checkbox>\n    </div>\n  </div>\n</div>\n\n<button mat-raised-button class=\"save\"color=\"primary\" (click)=\"saveTournament()\">Save</button>\n<button mat-raised-button class=\"cancel\"color=\"warn\" (click)=\"routeToTournamentTablePage()\">Cancel</button>\n","import { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { AccountService } from '../services/account.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private accountService: AccountService, private router: Router) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n        if (this.accountService.isLoggedIn()) {\r\n            return true;\r\n        }\r\n        this.router.navigate(['login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","export enum FilterLogicalOperators {\r\n    And,\r\n    Or,\r\n}\r\n","import { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { RequestFilters } from './RequestFilters';\r\n\r\n\r\nexport class PaginatedRequest {\r\n    pageIndex: number;\r\n    pageSize: number;\r\n    columnNameForSorting: string;\r\n    sortDirection: string;\r\n    requestFilters: RequestFilters;\r\n\r\n    constructor(paginator: MatPaginator, sort: MatSort, filters: RequestFilters) {\r\n        this.pageIndex = paginator.pageIndex;\r\n        this.pageSize = paginator.pageSize;\r\n        this.columnNameForSorting = sort.active;\r\n        this.sortDirection = sort.direction;\r\n        this.requestFilters = filters;\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { BearerToken } from '../models/account/BearerToken';\r\nimport { PlayerForLogin } from '../models/account/PlayerForLogin';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AccountService } from '../services/account.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { RegisterDialogComponent } from './register-dialog/register-dialog.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { GoogleLoginProvider, AuthService } from 'angularx-social-login';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  hide = true;\r\n\r\n  private returnUrl: string;\r\n  userData: any[] = [];\r\n  public userLoginForm: FormGroup;\r\n  public errorText: string;\r\n\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private dialog: MatDialog,\r\n    private snackBar: MatSnackBar\r\n  ) { }\r\n  ngOnInit() {\r\n    this.userLoginForm = this.formBuilder.group({\r\n      userName: ['', [Validators.required]],\r\n      password: ['', [Validators.required]]\r\n    });\r\n\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/tournament-table';\r\n\r\n  }\r\n\r\n  login() {\r\n    const userLogin: PlayerForLogin = {\r\n      ...this.userLoginForm.value\r\n    };\r\n    this.accountService.login(userLogin)\r\n      .subscribe((bearerToken: BearerToken) => {\r\n        localStorage.setItem('accessToken', bearerToken.accessToken);\r\n        this.router.navigate([this.returnUrl]);\r\n      }, error => {\r\n        this.errorText = error;\r\n        console.log(error);\r\n        this.snackBar.open(\"Invalid Login or Password\", '', {\r\n          duration: 3000,\r\n          verticalPosition: 'top'\r\n        })\r\n\r\n      });\r\n  }\r\n\r\n  logInWithGoogle(platform: string): void {\r\n    platform = GoogleLoginProvider.PROVIDER_ID;\r\n    this.authService.signIn(platform).then(\r\n      (response) => {\r\n        this.userData.push({\r\n          response\r\n        });\r\n      })\r\n    this.accountService.googleLogin(this.userData[0]).subscribe();\r\n  }\r\n\r\n\r\n  openRegisterDialog() {\r\n    this.dialog.open(RegisterDialogComponent, {\r\n      width: '600px',\r\n      height: '650px',\r\n    });\r\n  }\r\n\r\n}\r\n\r\n","<div id=\"container\" class=\"container\">\r\n  <div class=\"grandParentContaniner\">\r\n    <div class=\"parentContainer\">\r\n      <form novalidate class=\"loginForm\" [formGroup]=\"userLoginForm\">\r\n        <div>\r\n          <img class=\"imageSize\" src=\"../../assets/images/tournament-1.png\">\r\n          <h2>Login into TournamentBoard App</h2>\r\n\r\n          <mat-form-field style=\"display: block\" appearance=\"fill\">\r\n            <input matInput type=\"text\" placeholder=\"User Name\" formControlName=\"userName\" />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field style=\"display: block\" appearance=\"fill\">\r\n            <input matInput type=\"password\" [type]=\"hide ? 'password':'text'\" placeholder=\"Password\"\r\n              formControlName=\"password\" />\r\n            <i class=\"material-icons\" matSuffix (click)=\"hide =!hide\">{{hide ?'visibility_off':'visibility'}}</i>\r\n          </mat-form-field>\r\n          <button mat-raised-button color=\"warn\" class=\"register\" (click)=\"login()\">Login</button>\r\n          <button mat-raised-button color=\"primary\" class=\"login\" (click)=\"openRegisterDialog()\">Register</button>\r\n          <button mat-raised-button color=\"accent\" class=\"googleLogin\" (click)=\"logInWithGoogle('Google')\"><i class=\"fa fa-google\"></i> Login</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { LoginComponent } from '../login.component';\r\nimport { TournamentPlayer } from 'src/app/services/player.service';\r\nimport { PlayerDto } from 'src/app/models/player.model';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-register-dialog',\r\n  templateUrl: './register-dialog.component.html',\r\n  styleUrls: ['./register-dialog.component.css']\r\n})\r\nexport class RegisterDialogComponent implements OnInit {\r\n  hide = true;\r\n\r\n  imgUrl: string = \"/assets/images/unnamed.jpg\";\r\n  fileToUpload: File = null;\r\n\r\n  name = new FormControl('', [Validators.required]);\r\n  surname = new FormControl('', [Validators.required]);\r\n  userName = new FormControl('', [Validators.required]);\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  password = new FormControl('', [Validators.required, Validators.minLength(5)]);\r\n  selectedRole: string;\r\n  rolesList = [];\r\n\r\n  errorText: any;\r\n  constructor(private snackBar: MatSnackBar, private dialogRef: MatDialogRef<LoginComponent>, private playerService: TournamentPlayer) { }\r\n\r\n  ngOnInit(): void {\r\n    this.playerService.getRoles().subscribe(roles => this.rolesList = roles);\r\n  }\r\n\r\n  handleFileInput(file: FileList) {\r\n    this.fileToUpload = file.item(0);\r\n    var reader = new FileReader();\r\n    reader.onload = (event: any) => {\r\n      this.imgUrl = event.target.result;\r\n    }\r\n    reader.readAsDataURL(this.fileToUpload);\r\n  }\r\n\r\n  dismiss() {\r\n    this.dialogRef.close(null);\r\n  }\r\n\r\n  createPlayerDto() {\r\n    const player: PlayerDto = {\r\n      name: this.name.value,\r\n      surname: this.surname.value,\r\n      userName: this.userName.value,\r\n      email: this.email.value,\r\n      password: this.password.value,\r\n      role: this.selectedRole,\r\n      profileImage: this.fileToUpload.name\r\n    }\r\n    return player;\r\n  }\r\n\r\n  savePlayer() {\r\n    const player = this.createPlayerDto();\r\n    this.playerService.postPlayer(player).subscribe(\r\n      p => {\r\n        this.errorText = p;\r\n        let finalMessage = \"\";\r\n        if (this.errorText.errors.length != 0) {\r\n          finalMessage = this.errorText.errors[0].description;\r\n        } else {\r\n          finalMessage = \"Registration Succes\"\r\n          this.dialogRef.close(null);\r\n        }\r\n        this.snackBar.open(finalMessage, '', {\r\n          duration: 3000,\r\n          verticalPosition: 'top'\r\n        })\r\n      },\r\n      error => {\r\n        this.errorText = error;\r\n        this.snackBar.open(\"Incorect Password Input\", '', {\r\n          duration: 3000,\r\n          verticalPosition: 'top'\r\n        })\r\n      });\r\n    this.playerService.uploadImage(this.fileToUpload).subscribe();\r\n  }\r\n  getErrorMessage() {\r\n    if (this.password.hasError('required')) {\r\n      return 'You must enter a value';\r\n    }\r\n    return this.password.hasError('minLength(5)') ? 'Not a valid password' : '';\r\n  }\r\n  getErrorMessageEmail() {\r\n    if (this.email.hasError('required')) {\r\n      return 'You must enter a value';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n}\r\n","<h1>Create Profile</h1>\r\n<div>\r\n    <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"PlayerName\" [formControl]=\"name\" required>\r\n    </mat-form-field>\r\n</div>\r\n\r\n<div>\r\n    <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Surname</mat-label>\r\n        <input matInput placeholder=\"PlayerSurname\" [formControl]=\"surname\" required>\r\n    </mat-form-field>\r\n</div>\r\n\r\n<div>\r\n    <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput placeholder=\"Email\" [formControl]=\"email\" required>\r\n        <mat-error *ngIf=\"email.invalid\">{{getErrorMessageEmail()}}</mat-error>\r\n    </mat-form-field>\r\n</div>\r\n\r\n<div>\r\n    <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Username</mat-label>\r\n        <input matInput placeholder=\"Username\" [formControl]=\"userName\" required>\r\n    </mat-form-field>\r\n</div>\r\n<div class=\"imput-pass\">\r\n    <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Password</mat-label>\r\n        <input matInput type=\"password\" [type]=\"hide ? 'password':'text'\" placeholder=\"Password\"\r\n            [formControl]=\"password\" required>\r\n        <i class=\"material-icons\" matSuffix (click)=\"hide =!hide\">{{hide ?'visibility_off':'visibility'}}</i>\r\n        <mat-error *ngIf=\"password.invalid\">{{getErrorMessage()}}</mat-error>\r\n        <mat-hint>Min 5 characters,one upper case and one symbol </mat-hint>\r\n    </mat-form-field>\r\n</div>\r\n\r\n<div>\r\n    <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Select Role</mat-label>\r\n        <mat-select [(value)]=\"selectedRole\">\r\n            <mat-option></mat-option>\r\n            <mat-option *ngFor=\"let role of rolesList\" [value]=\"role.name\">\r\n                {{role.name}}\r\n            </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n</div>\r\n\r\n<div class=\"imgPosition\">\r\n    <img [src]=\"imgUrl\" class=\"imgStyle\">\r\n    <input type=\"file\" #Image accept=\"image/*\" (change)=\"handleFileInput($event.target.files)\" required>\r\n</div>\r\n\r\n<mat-dialog-actions> \r\n    <button mat-raised-button color=\"primary\" class=\"save\" (click)=\"savePlayer()\"\r\n        [disabled]=\"!userName.valid ||!surname.valid ||!email.valid ||!password.valid||!name.valid\">\r\n        <mat-icon>save</mat-icon>Save\r\n    </button>\r\n    <button mat-raised-button color=\"warn\" class=\"cancel\" (click)=\"dismiss()\">\r\n        <mat-icon>cancel</mat-icon>Cancel\r\n    </button>\r\n</mat-dialog-actions>","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { TournamentPlayer } from '../services/player.service';\r\n\r\n\r\n@Component({\r\n  selector: 'main-nav',\r\n  templateUrl: './main-nav.component.html',\r\n  styleUrls: ['./main-nav.component.css']\r\n})\r\nexport class MainNavComponent {\r\n  imgUrl: string;\r\n\r\n  name: string;\r\n  surName: string;\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver, private router: Router, private playerService: TournamentPlayer) { }\r\n\r\n  ngOnInit(): void {\r\n    this.playerService.getPlayer().subscribe(p => {\r\n      this.name = p.name;\r\n      this.surName = p.surname;\r\n      this.imgUrl =  p.profileImage;\r\n    })\r\n  }\r\n\r\n  onFileSelected(event) {\r\n    console.log(event);\r\n  }\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('accessToken');\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport=\"false\"\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\" [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n    [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar color=\"warn\">{{name}} {{surName}}</mat-toolbar>\n    <mat-nav-list>\n      <img [src]=\"imgUrl\" class=\"imgStyle\">\n      <a mat-list-item routerLink=\"/profile\"><i class=\"fa fa-user\"></i>Profile</a>\n      <a mat-list-item routerLink=\"/tournament-table\"><i class=\"fa fa-list\"></i>AllTournaments</a>\n      <a mat-list-item routerLink=\"/my-achievements\"><i class=\"fa fa-trophy\"></i>MyAchievments</a>\n      <a mat-list-item routerLink=\"/players-table\"><i class=\"fa fa-users\"></i>AllPlayers</a>\n      <a mat-list-item routerLink=\"/settings\"><i class=\"fa fa-cog\"></i>Settings</a>\n      <button class=\"button1\" mat-raised-button class =\"Logout\" (click)=\"logout()\">Logout</button>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"clouds\">\n    <mat-toolbar color=\"primary\" >\n      <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span><img src=\"../../assets/images/tournament-1.png\"></span>\n    </mat-toolbar>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\nimport { WinnedTournaments } from '../models/tournament-table.model';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { TournamentTableService } from '../services/tournamnet-table.service';\n\n\n@Component({\n  selector: 'my-achievements',\n  templateUrl: './my-achievements.component.html',\n  styleUrls: ['./my-achievements.component.css']\n})\nexport class MyAchievementsComponent implements OnInit {\n\n  dataSource: MatTableDataSource<WinnedTournaments>;\n  tournamentItemTable: WinnedTournaments[];\n\n  constructor(private torunamentService: TournamentTableService) { }\n\n  ngOnInit(): void {\n    this.getTournamentList();\n  }\n  displayedColumns: string[] = ['id', 'tournamentName','winnedGames'];\n\n  getTournamentList() {\n    this.torunamentService.getWinnedTournaments()\n      .subscribe(t => {\n        this.tournamentItemTable = t;\n        this.dataSource = new MatTableDataSource(t);\n        console.log(t);\n        \n      })\n  }\n\n  roleMatch(allowedRoles): boolean {\n    var payLoad = JSON.parse(window.atob(localStorage.getItem('accessToken').split('.')[1]));\n    var userRole = payLoad['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];    \n    if (allowedRoles == userRole)\n      return true;\n    else\n      return false;\n  }\n\n}\n","<h1>My Tournaments</h1>\n<div class=\"mat-elevation-z8 tournament-table\">\n<table mat-table [dataSource]=\"dataSource\" class=\"full-width-table\">\n\n    <ng-container matColumnDef=\"id\" class = \"center\" >\n        <th mat-header-cell *matHeaderCellDef >TournamentId</th>\n        <td mat-cell *matCellDef=\"let tournament\"> {{tournament.tournamentId}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"tournamentName\">\n        <th mat-header-cell *matHeaderCellDef>TournamentName</th>\n        <td mat-cell *matCellDef=\"let tournament\"> {{tournament.tournamentName}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"winnedGames\">\n        <th mat-header-cell *matHeaderCellDef>Winned Games</th>\n        <td mat-cell *matCellDef=\"let tournament\"> {{tournament.wins}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from 'src/app/services/shared/data.service';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { TournamentPlayer } from 'src/app/services/player.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-delete-player-dialog',\r\n  templateUrl: './delete-player-dialog.component.html',\r\n  styleUrls: ['./delete-player-dialog.component.css']\r\n})\r\nexport class DeletePlayerDialogComponent implements OnInit {\r\n\r\n  id: number;\r\n  errorText: any;\r\n  constructor(private snackBar: MatSnackBar, private dataService: DataService, private dialogRef: MatDialogRef<DeletePlayerDialogComponent>, private playerService: TournamentPlayer) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  dismiss() {\r\n    this.dialogRef.close(null);\r\n  }\r\n\r\n  deletePlayer() {\r\n    this.id = this.dataService.getData();\r\n    this.playerService.deletePlayer(this.id).subscribe(\r\n      p => {\r\n        this.snackBar.open(\"Player Deleted Successefully\", '', {\r\n          duration: 3000,\r\n          verticalPosition: 'top'\r\n        })\r\n      },\r\n      error => {\r\n        this.errorText = error;\r\n        let finalMessage = this.errorText.error;\r\n        this.snackBar.open(finalMessage, '', {\r\n          duration: 3000,\r\n          verticalPosition: 'top'\r\n        })\r\n      });\r\n    this.dialogRef.close(null);\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Are you sure delete this Player</h2>\n<mat-dialog-actions >\n    <button mat-mini-fab color=\"warn\"(click)=\"deletePlayer()\"><i class=\"fa fa-trash\"></i></button>\n    <button mat-mini-fab color=\"primary\" (click)=\"dismiss()\"><i class=\"fa fa-times\"></i></button>\n</mat-dialog-actions>","import { Component, ViewChild, AfterViewInit } from '@angular/core';\nimport { TournamentPlayer } from '../services/player.service';\nimport { IPlayer } from '../models/player.model';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { PagedResult } from '../infrastructure/models/PagedResult';\nimport { TableColumn } from '../infrastructure/models/TableColumn';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { RequestFilters } from '../infrastructure/models/RequestFilters';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { merge } from 'rxjs';\nimport { PaginatedRequest } from '../infrastructure/models/PaginatedRequest';\nimport { Filter } from '../infrastructure/models/Filter';\nimport { FilterLogicalOperators } from '../infrastructure/models/FilterLogicalOperators';\nimport { DataService } from '../services/shared/data.service';\nimport { DeletePlayerDialogComponent } from './delete-player-dialog/delete-player-dialog.component';\n\n@Component({\n  selector: 'players-table',\n  templateUrl: './players-table.component.html',\n  styleUrls: ['./players-table.component.css']\n})\nexport class PlayersTableComponent implements AfterViewInit {\n\n  playerTable: IPlayer[];\n  pagedPlayers: PagedResult<IPlayer>;\n\n  tableColumns: TableColumn[] = [\n    { name: 'profileImage', index:'profileImage',displayName:'profileImage'},\n    { name: 'id', index: 'id', displayName: 'Id' },\n    { name: 'name', index: 'name', displayName: 'Price' },\n    { name: 'surname', index: 'surname', displayName: 'Surname' },\n    { name: 'userName', index: 'userName', displayName: 'Username', useInSearch: true },\n    { name: 'email', index: 'email', displayName: 'Email' },\n    { name: 'registrationDate', index: 'registrationDate', displayName: 'RegistrationDate' },\n    { name: 'action', index:'action',displayName:'Action'}\n  ];\n  displayedColumns: string[];\n\n  searchInput = new FormControl('');\n  filterForm: FormGroup;\n  requestFilters: RequestFilters;\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n\n  constructor(\n    private playerService: TournamentPlayer,\n    private formBuilder: FormBuilder,\n    private dialog: MatDialog,\n    public snackBar: MatSnackBar,\n    private dataService: DataService,\n  ) {\n    this.displayedColumns = this.tableColumns.map(column => column.name);\n    this.filterForm = this.formBuilder.group({\n      userName: ['']\n    });\n  }\n\n  ngAfterViewInit() {\n    this.loadPlayersFromApi();\n\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    merge(this.sort.sortChange, this.paginator.page).subscribe(() => {\n      this.loadPlayersFromApi();\n    });\n  }\n\n  loadPlayersFromApi() {\n    const paginatedRequest = new PaginatedRequest(this.paginator, this.sort, this.requestFilters);\n    this.playerService.getPlayersPaged(paginatedRequest)\n      .subscribe((pagedPlayers: PagedResult<IPlayer>) => {\n        this.pagedPlayers = pagedPlayers;\n        console.log(pagedPlayers);\n\n      });\n  }\n\n  applySearch() {\n    this.createFiltersFromSearchInput();\n    this.loadPlayersFromApi();\n  }\n\n  resetGrid() {\n    this.requestFilters = { filters: [], logicalOperator: FilterLogicalOperators.And };\n    this.loadPlayersFromApi();\n  }\n\n  filterBooksFromForm() {\n    this.createFiltersFromForm();\n    this.loadPlayersFromApi();\n  }\n  private createFiltersFromForm() {\n    if (this.filterForm.value) {\n      const filters: Filter[] = [];\n\n      Object.keys(this.filterForm.controls).forEach(key => {\n        const controlValue = this.filterForm.controls[key].value;\n        if (controlValue) {\n          const foundTableColumn = this.tableColumns.find(tableColumn => tableColumn.name === key);\n          const filter: Filter = { path: foundTableColumn.index, value: controlValue };\n          filters.push(filter);\n        }\n      });\n\n      this.requestFilters = {\n        logicalOperator: FilterLogicalOperators.And,\n        filters\n      };\n    }\n  }\n\n  private createFiltersFromSearchInput() {\n    const filterValue = this.searchInput.value.trim();\n    if (filterValue) {\n      const filters: Filter[] = [];\n      this.tableColumns.forEach(column => {\n        if (column.useInSearch) {\n          const filter: Filter = { path: column.index, value: filterValue };\n          filters.push(filter);\n        }\n      });\n      this.requestFilters = {\n        logicalOperator: FilterLogicalOperators.Or,\n        filters\n      };\n    } else {\n      this.resetGrid();\n    }\n  }\n\n  roleMatch(allowedRoles): boolean {\n    var payLoad = JSON.parse(window.atob(localStorage.getItem('accessToken').split('.')[1]));\n    var userRole = payLoad['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\n    if (allowedRoles == userRole)\n      return true;\n    else\n      return false;\n  }\n\n  openDeletePlayerDialog(id: number): void {\n    this.dataService.setData(id);\n    let dialogRef = this.dialog.open(DeletePlayerDialogComponent);\n    dialogRef.afterClosed().subscribe(() => { this.loadPlayersFromApi() });\n  }\n\n\n}\n","<h1>Players</h1>\r\n<div class=\"mat-elevation-z8 tournament-table\">\r\n\r\n    <mat-form-field>\r\n        <mat-label>Search</mat-label>\r\n        <input matInput [formControl]=\"searchInput\" (keyup.enter)=\"applySearch()\">\r\n    </mat-form-field>\r\n\r\n    <table mat-table [dataSource]=\"pagedPlayers?.items\" class=\"full-width-table\" matSort matSortActive=\"\"\r\n        matSortDirection=\"asc\">\r\n\r\n        <ng-container matColumnDef=\"profileImage\">\r\n            <th mat-header-cell *matHeaderCellDef>Profile Image</th>\r\n            <td mat-cell *matCellDef=\"let player\"><img class=\"imgStyle\" [src]=\"player.profileImage\"></td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"id\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n            <td mat-cell *matCellDef=\"let player\"> {{player.id}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef>Name</th>\r\n            <td mat-cell *matCellDef=\"let player\"> {{player.name}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"surname\">\r\n            <th mat-header-cell *matHeaderCellDef>Surname</th>\r\n            <td mat-cell *matCellDef=\"let player\"> {{player.surname}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"userName\">\r\n            <th mat-header-cell *matHeaderCellDef>Username</th>\r\n            <td mat-cell *matCellDef=\"let player\"> {{player.userName}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"email\">\r\n            <th mat-header-cell *matHeaderCellDef>Email</th>\r\n            <td mat-cell *matCellDef=\"let player\"> {{player.email}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"registrationDate\">\r\n            <th mat-header-cell *matHeaderCellDef>Registration Date</th>\r\n            <td mat-cell *matCellDef=\"let player\"> {{player.registrationDate|date}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"action\">\r\n            <th mat-header-cell *matHeaderCellDef>Actions</th>\r\n            <td mat-cell *matCellDef=\"let row\">\r\n                <button mat-mini-fab color=\"warn\" disabled *ngIf=\"roleMatch('user')\"><i class=\"fa fa-trash\"></i></button>\r\n                <button mat-mini-fab color=\"warn\" (click)=\"openDeletePlayerDialog(row.id)\"><i class=\"fa fa-trash\"></i></button>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n    <mat-paginator #paginator [length]=\"pagedPlayers?.total\" [pageIndex]=\"0\" [pageSize]=\"4\"\r\n        [pageSizeOptions]=\"[4, 10, 25, 50]\">\r\n    </mat-paginator>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TournamentPlayer } from '../services/player.service';\r\nimport { PlayerDto } from '../models/player.model';\r\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  @ViewChild('Image', { static: true }) fileInput: ElementRef\r\n\r\n  form: FormGroup;\r\n  errorText: any;\r\n  imgUrl: string;\r\n  fileToUpload: File;\r\n  profileImage: string;\r\n  \r\n  constructor(private router: Router, private playerService: TournamentPlayer, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.initializeForm();\r\n    this.getPlayer()\r\n  }\r\n\r\n  getPlayer() {\r\n    this.playerService.getPlayer().subscribe(p => {\r\n      this.form.patchValue({ ...p });\r\n      this.imgUrl = p.profileImage;\r\n      let imgArray = p.profileImage.split(\"/\");\r\n      let imgName = imgArray[imgArray.length-1]\r\n      this.fileToUpload = new File([\"\"], imgName);\r\n    })\r\n  }\r\n\r\n  private initializeForm(): void {\r\n    this.form = new FormGroup({\r\n      name: new FormControl('', [Validators.required, Validators.maxLength(8)]),\r\n      surname: new FormControl(''),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      userName: new FormControl('')\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['tournament-table']);\r\n  }\r\n\r\n  save() {\r\n    let player: PlayerDto;\r\n    player = {\r\n      ...this.form.getRawValue(),\r\n      profileImage: this.fileToUpload.name\r\n    }\r\n    this.playerService.updatePlayer(player).subscribe(\r\n      p => {\r\n        this.errorText = p;\r\n        console.log(p);\r\n        let finalMessage = \"\";\r\n        if (this.errorText.errors.length != 0) {\r\n          finalMessage = this.errorText.errors[0].description;\r\n        } else {\r\n          finalMessage = \"Success\"\r\n        }\r\n        this.snackBar.open(finalMessage, '', {\r\n          duration: 3000,\r\n          verticalPosition: 'top'\r\n        })\r\n        this.playerService.uploadImage(this.fileToUpload).subscribe();\r\n        location.reload();\r\n      });\r\n  }\r\n\r\n  handleFileInput(file: FileList) {\r\n    this.fileToUpload = file.item(0);\r\n    var reader = new FileReader();\r\n    reader.onload = (event: any) => {\r\n      this.imgUrl = event.target.result;\r\n    }\r\n    reader.readAsDataURL(this.fileToUpload);\r\n  }\r\n\r\n\r\n  getErrorMessage() {\r\n    if (this.form.get('email').hasError('required')) {\r\n      return 'You must enter a value';\r\n    }\r\n    return this.form.get('email').hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n}\r\n","<h1>Edit Profile</h1>\r\n\r\n<div class=\"parent\">\r\n  <form class=\"example-form\" [formGroup]=\"form\" (ngSubmit)=\"save()\">\r\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n      <mat-label>Name</mat-label>\r\n      <input matInput placeholder=\"New Name\" formControlName=\"name\" required>\r\n      <mat-error *ngIf=\"form.get('name').hasError('required')\">This field is required</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n      <mat-label>Surname</mat-label>\r\n      <input matInput placeholder=\"New Surname\" formControlName=\"surname\" required>\r\n      <!-- <mat-error *ngIf=\"name.invalid\">{{getErrorMessage()}}</mat-error> -->\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n      <mat-label>Email</mat-label>\r\n      <input matInput placeholder=\"New Email\" formControlName=\"email\" required>\r\n      <mat-error *ngIf=\"form.get('email').invalid\">{{getErrorMessage()}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n      <mat-label>UserName</mat-label>\r\n      <input matInput placeholder=\"New UserName\" formControlName=\"userName\" required>\r\n      <!-- <mat-error *ngIf=\"name.invalid\">{{getErrorMessage()}}</mat-error> -->\r\n    </mat-form-field>\r\n\r\n    <div class=\"imgPosition\">\r\n      <img [src]=\"imgUrl\" class=\"imgStyle\">\r\n      <input type=\"file\" #Image accept=\"image/*\" (change)=\"handleFileInput($event.target.files)\" required>\r\n    </div>\r\n\r\n    <mat-dialog-actions>\r\n      <button mat-raised-button color=\"primary\" type=\"submit\"\r\n        [disabled]=\"!form.get('email').valid || !form.get('name').valid || !form.get('surname').valid || !form.get('userName').valid\">\r\n        <mat-icon>save</mat-icon>Save\r\n      </button>\r\n      <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"cancel()\" class=\"cancel\">\r\n        <mat-icon>cancel</mat-icon>Cancel\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </form>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { PlayerForLogin } from '../models/account/PlayerForLogin';\r\nimport { BearerToken } from '../models/account/BearerToken';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n\r\n  baseUrl = environment.apiUrl + 'api/account/';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  isLoggedIn(): boolean {\r\n    const token = localStorage.getItem('accessToken');\r\n    return token ? true : false;\r\n  }\r\n\r\n  login(playerForLoginDto: PlayerForLogin): Observable<BearerToken> {\r\n    return this.http.post<BearerToken>(this.baseUrl + 'login/', playerForLoginDto);\r\n  }\r\n\r\n  googleLogin(userData) {\r\n    return this.http.get<any>(this.baseUrl + 'googleLogin/', userData).pipe(\r\n      map(result => {\r\n        return result;\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { IPlayer, PlayerDto, PlayerRoles, ChangePassword, PlayerForDelete } from '../models/player.model';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { PaginatedRequest } from '../infrastructure/models/PaginatedRequest';\r\nimport { PagedResult } from '../infrastructure/models/PagedResult';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class TournamentPlayer {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    baseUrl = environment.apiUrl;\r\n\r\n    getPlayerList(): Observable<IPlayer[]> {\r\n        return this.http.get<IPlayer[]>(this.baseUrl + 'api/player');\r\n    }\r\n\r\n    postPlayer(player: PlayerDto) {\r\n        return this.http.post(this.baseUrl + 'api/account/register', player);\r\n    }\r\n\r\n    getRoles(): Observable<PlayerRoles[]> {\r\n        return this.http.get<PlayerRoles[]>(this.baseUrl + 'api/player/roles');\r\n    }\r\n\r\n    getPlayer(): Observable<PlayerDto> {\r\n        return this.http.get<PlayerDto>(this.baseUrl + 'api/player/playerAccount');\r\n    }\r\n\r\n\r\n    getPlayerById(id: number): Observable<IPlayer> {\r\n        return this.http.get<IPlayer>(this.baseUrl + 'api/player/' + id);\r\n    }\r\n\r\n\r\n    updatePlayer(player: PlayerDto) {\r\n        return this.http.post(this.baseUrl + 'api/account/editPlayer', player);\r\n    }\r\n\r\n    changePassword(passwordDto: ChangePassword) {\r\n        return this.http.post(this.baseUrl + 'api/account/changePassword', passwordDto);\r\n    }\r\n\r\n    private handleError(error: HttpErrorResponse) {\r\n        return Observable.throw(error.message);\r\n    }\r\n\r\n    getPlayersPaged(paginatedRequest: PaginatedRequest): Observable<PagedResult<IPlayer>> {\r\n        return this.http.post<PagedResult<IPlayer>>(this.baseUrl + 'api/player/paginatedSearch', paginatedRequest);\r\n    }\r\n\r\n    deletePlayer(playerId: number):Observable<PlayerForDelete> {\r\n        return this.http.delete<PlayerForDelete>(this.baseUrl + 'api/player/' + playerId);\r\n    }\r\n\r\n    uploadImage(filetToUpload:File){\r\n        const formData:FormData = new FormData();\r\n        formData.append('Image',filetToUpload,filetToUpload.name);\r\n        return this.http.post(this.baseUrl +'api/account/uploadImage',formData);\r\n    }\r\n} ","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  constructor() { }\r\n\r\n  private data: any;\r\n  private name: any;\r\n  private id: number;\r\n\r\n  setData(data: any) {\r\n    this.data = data;\r\n  }\r\n\r\n  setName(name: any) {\r\n    this.name = name;\r\n  }\r\n\r\n  getName() {\r\n    const temp = this.name;\r\n    this.clearData();\r\n    return temp;\r\n  }\r\n\r\n  setId(id: number) {\r\n    this.id = id;\r\n  }\r\n\r\n  getId(){\r\n    const temp = this.id\r\n    this.clearData();\r\n    return temp;\r\n  }\r\n  getData() {\r\n    const temp = this.data;\r\n    this.clearData();\r\n    return temp;\r\n  }\r\n\r\n  clearData() {\r\n    this.data = undefined;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ITournament, TournamentDto, WinnedTournaments } from '../models/tournament-table.model';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class TournamentTableService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    baseUrl = environment.apiUrl;\r\n\r\n    getTournamentList(): Observable<ITournament[]> {\r\n        return this.http.get<ITournament[]>(this.baseUrl + 'api/tournament');\r\n    }\r\n\r\n    postTournament(tournament: TournamentDto) {\r\n        return this.http.post(this.baseUrl + 'api/tournament', tournament);\r\n    }\r\n\r\n    deleteTournament(id: number): Observable<number> {\r\n        return this.http.delete<number>(this.baseUrl + 'api/tournament/' + id);\r\n    }\r\n\r\n    getTournamentById(id: number): Observable<TournamentDto> {\r\n        return this.http.get<TournamentDto>(this.baseUrl + 'api/tournament/' + id)\r\n    }\r\n\r\n    getWinnedTournaments(): Observable<WinnedTournaments[]> {\r\n        return this.http.get<WinnedTournaments[]>(this.baseUrl + ('api/tournament/participationTournaments'))\r\n    }\r\n\r\n    updateTournament(tournament: TournamentDto) {\r\n        return this.http.put(this.baseUrl + 'api/tournament', tournament)\r\n    }\r\n\r\n    getProgress(): Observable<number[]> {\r\n        return this.http.get<number[]>(this.baseUrl + 'api/tournament/progress')\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ChangePassword } from '../models/player.model';\nimport { TournamentPlayer } from '../services/player.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n  hide = true;\n  hide1 = true;\n  \n  curentPassword = new FormControl('');\n  newPassword = new FormControl('');\n  errorText:any;\n\n  constructor(private snackBar:MatSnackBar,private router:Router, private playerService: TournamentPlayer) { }\n\n  ngOnInit(): void {\n  }\n\n  cancel() {\n    this.router.navigate(['tournament-table']);\n  }\n\n  changePassword(){\n    const passwordDto :ChangePassword={\n      curentPassword :this.curentPassword.value,\n      newPassword : this.newPassword.value\n    }\n    this.playerService.changePassword(passwordDto).subscribe(\n      p => {\n        console.log(p);\n        \n        this.errorText = p;\n        let finalMessage = \"\";\n        if (this.errorText.errors.length != 0) {\n          finalMessage = this.errorText.errors[0].description;\n        } else {\n          finalMessage = \"Password Changed Successefully\"\n        }\n        this.snackBar.open(finalMessage, '', {\n          duration: 3000,\n          verticalPosition: 'top'\n        })\n      },\n      error => {\n        this.errorText = error;\n        let finalMessage = this.errorText.error;\n        this.snackBar.open(\"Incorect Input of Curent Password\", '', {\n          duration: 3000,\n          verticalPosition: 'top'\n        })\n      });\n  }\n\n}\n","<h1>Change Password</h1>\n\n<div class=\"parent\">\n  <form class=\"example-form\">\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n      <mat-label>Curent Password</mat-label>\n      <input matInput  type=\"password\" [type] =\"hide1 ? 'password':'text'\" placeholder=\"Password\" [formControl]=\"curentPassword\" >\n      <i class = \"material-icons\" matSuffix (click) = \"hide1 =!hide1\">{{hide1 ?'visibility_off':'visibility'}}</i>\n      <!-- <mat-error *ngIf=\"name.invalid\">{{getErrorMessage()}}</mat-error> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n      <mat-label>New Password</mat-label>\n      <input matInput  type=\"password\" [type] =\"hide ? 'password':'text'\" placeholder=\"Password\" [formControl]=\"newPassword\" >\n      <i class = \"material-icons\" matSuffix (click) = \"hide =!hide\">{{hide ?'visibility_off':'visibility'}}</i>\n      <!-- <mat-error *ngIf=\"name.invalid\">{{getErrorMessage()}}</mat-error> -->\n    </mat-form-field>\n    <mat-dialog-actions>\n        <button mat-raised-button color=\"primary\" (click)=\"changePassword()\">\n          <mat-icon>save</mat-icon>Save\n        </button>\n        <button mat-raised-button color=\"warn\"class=\"cancel\" (click)=\"cancel()\">\n          <mat-icon>cancel</mat-icon>Cancel\n        </button>\n      </mat-dialog-actions>\n</form>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { TournamentPlayer } from 'src/app/services/player.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ITournament } from 'src/app/models/tournament-table.model';\nimport { Router } from '@angular/router';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { DataService } from '../../services/shared/data.service';\n\n@Component({\n  selector: 'app-add-tournament-dialog',\n  templateUrl: './add-tournament-dialog.component.html',\n  styleUrls: ['./add-tournament-dialog.component.css']\n})\nexport class AddTournamentDialogComponent implements OnInit {\n\n  tournament:ITournament;\n  public players =[];\n  public tournamentName = new FormControl('', [Validators.required]);\n  \n  dropdownList = [];\n  selectedItems =[];\n  dropdownSettings:IDropdownSettings;\n\n  constructor(private dataService:DataService,private router:Router,private _players:TournamentPlayer ,private dialogRef:MatDialogRef<AddTournamentDialogComponent>) { }\n\n  ngOnInit():void {\n    this._players.getPlayerList()\n    .subscribe(p=>this.dropdownList = p)\n  \n    this.selectedItems = [];\n    this.dropdownSettings= {\n      singleSelection: false,\n      idField: 'id',\n      textField: 'userName',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 9,\n      allowSearchFilter: true\n    };\n  }\n\nonItemSelect(item:any){\n    console.log(item);\n    console.log(this.selectedItems);\n}\nOnItemDeSelect(item:any){\n    console.log(item);\n    console.log(this.selectedItems);\n}\nonSelectAll(items: any){\n    console.log(items);\n}\nonDeSelectAll(items: any){\n    console.log(items);\n}\n\n\n\n  getErrorMessage() {\n    if (this.tournamentName.hasError('required')) {\n      return 'Enter Tournament Name';\n    }\n  }\n  routeToAddTournamentPage() {\n    this.router.navigate(['add-tournament']);\n  }\n  create(){\n    console.log(\"selected items\",this.selectedItems);\n    this.dialogRef.close(this.selectedItems);\n    this.dataService.setData(this.selectedItems);\n    this.dataService.setName(this.tournamentName.value)\n    console.log(this.tournamentName.value);\n    this.routeToAddTournamentPage();\n  }\n  \n  dismiss(){\n    this.dialogRef.close(null);\n  }\n\n  \n\n}\n","<h2 mat-dialog-title>New Tournament</h2>\n\n<!-- <mat-dialog-content > -->\n\n<div class=\"exemple-container\">\n  <mat-form-field class = \"drop-down-style\">\n    <mat-label>Tournament Name</mat-label>\n    <input matInput placeholder=\"Enter Name\" [formControl]=\"tournamentName\" required>\n    <mat-error *ngIf=\"tournamentName.invalid\">{{getErrorMessage()}}</mat-error>\n  </mat-form-field>\n\n  <div class=\"drop-down-style\">\n    <ng-multiselect-dropdown [placeholder]=\"'Select Players'\" [data]=\"dropdownList\" [(ngModel)]=\"selectedItems\"\n      [settings]=\"dropdownSettings\" (onSelect)=\"onItemSelect($event)\" (onSelectAll)=\"onSelectAll($event)\">\n    </ng-multiselect-dropdown>\n  </div>\n</div>\n\n<!-- </mat-dialog-content> -->\n\n<mat-dialog-actions >\n  <button mat-raised-button color=\"primary\" class=\"save\" (click)='create()' [disabled]=\"!tournamentName.valid\">\n    <mat-icon>save</mat-icon>Save\n  </button>\n  <button mat-raised-button color =\"warn\"class =\"cancel\" (click)='dismiss()'>\n    <mat-icon>cancel</mat-icon>Cancel\n  </button>\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { TournamentTableService } from 'src/app/services/tournamnet-table.service';\r\nimport { DataService } from 'src/app/services/shared/data.service';\r\n\r\n@Component({\r\n  selector: 'delete-dialog',\r\n  templateUrl: './delete-dialog.component.html',\r\n  styleUrls: ['./delete-dialog.component.css']\r\n})\r\n\r\nexport class DeleteDialogComponent implements OnInit {\r\n\r\n  id: number;\r\n  constructor(private dataService: DataService, private dialogRef: MatDialogRef<DeleteDialogComponent>, private tournamentService: TournamentTableService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  dismiss() {\r\n    this.dialogRef.close(null);\r\n  }\r\n\r\n  deleteTournament() {\r\n    this.id = this.dataService.getData();\r\n    console.log(this.id);\r\n    this.tournamentService.deleteTournament(this.id).subscribe(() => { this.dismiss() });\r\n  }\r\n\r\n}","<h2 mat-dialog-title>Are you sure delete this Tournament</h2>\n<mat-dialog-actions >\n    <button mat-mini-fab color=\"warn\"(click) = \"deleteTournament()\"><i class=\"fa fa-trash\"></i></button>\n    <button mat-mini-fab color=\"primary\" (click) =\"dismiss()\"><i class=\"fa fa-times\"></i></button>\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TournamentTableService } from '../services/tournamnet-table.service';\r\nimport { ITournament } from '../models/tournament-table.model';\r\nimport { AddTournamentDialogComponent } from './add-tournament-dialog/add-tournament-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeleteDialogComponent } from './delete-dialog/delete-dialog.component';\r\nimport { DataService } from '../services/shared/data.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'tournament-table',\r\n  templateUrl: './tournament-table.component.html',\r\n  styleUrls: ['./tournament-table.component.css']\r\n})\r\nexport class TournamentTableComponent implements OnInit {\r\n\r\n  dataSource: MatTableDataSource<ITournament>;\r\n  progress: Promise<number[]>;\r\n\r\n  constructor(private router: Router, private dataService: DataService, private dialog: MatDialog, private torunamentService: TournamentTableService) { }\r\n\r\n  displayedColumns = ['id', 'tournamentName', 'winnerName', 'Nr.WinnedGames', 'action', 'progress'];\r\n\r\n\r\n  async ngOnInit() {\r\n    await this.getTournamentList();\r\n  }\r\n\r\n  async getTournamentList() {\r\n    this.dataSource = new MatTableDataSource();\r\n\r\n    this.torunamentService.getTournamentList()\r\n      .subscribe(t => {\r\n        this.dataSource.data = t;\r\n        this.torunamentService.getProgress()\r\n          .subscribe(res => {\r\n            this.dataSource.data.forEach((item, index) => {\r\n              item['progress'] = res[index];\r\n            });\r\n          });\r\n      });\r\n\r\n  }\r\n\r\n\r\n  openAddTournamentDialog(): void {\r\n    let dialogRef = this.dialog.open(AddTournamentDialogComponent, {\r\n      width: '600px',\r\n      height: '600px',\r\n      data: {}\r\n    });\r\n    dialogRef.afterClosed().subscribe(() => { this.getTournamentList() });\r\n  }\r\n\r\n  openDeleteTournamentDialog(id: number): void {\r\n    this.dataService.setData(id);\r\n    let dialogRef = this.dialog.open(DeleteDialogComponent);\r\n    dialogRef.afterClosed().subscribe(() => { this.getTournamentList() });\r\n  }\r\n\r\n\r\n  editTournament(id: number) {\r\n    this.dataService.setId(id);\r\n    this.router.navigate(['edit-tournament']);\r\n  }\r\n  viewTournament(id: number) {\r\n    this.dataService.setId(id);\r\n    this.router.navigate(['view-tournament']);\r\n  }\r\n\r\n  roleMatch(allowedRoles): boolean {\r\n    var payLoad = JSON.parse(window.atob(localStorage.getItem('accessToken').split('.')[1]));\r\n    var userRole = payLoad['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n    if (allowedRoles == userRole)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n}\r\n","<h1>Tournament Table</h1>\r\n\r\n<div>\r\n  <button mat-raised-button color=\"accent\" (click)=\"openAddTournamentDialog()\">NewTournament</button>\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8 tournament-table\">\r\n  <table [dataSource]=\"dataSource\" mat-table class=\"full-width-table\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\" class=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef>Id</th>\r\n      <td class=\"id\" mat-cell *matCellDef=\"let tournament\">{{tournament.tournamentId}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"tournamentName\">\r\n      <th mat-header-cell *matHeaderCellDef>Tournament Name</th>\r\n      <td mat-cell *matCellDef=\"let tournament\">{{tournament.tournamentName}}</td>\r\n    </ng-container>\r\n\r\n    <!-- WinnerName -->\r\n    <ng-container matColumnDef=\"winnerName\">\r\n      <th mat-header-cell *matHeaderCellDef>Winner Name</th>\r\n      <td mat-cell *matCellDef=\"let tournament\">{{tournament.winnerName}}</td>\r\n    </ng-container>\r\n\r\n    <!-- WinnerName -->\r\n    <ng-container matColumnDef=\"Nr.WinnedGames\">\r\n      <th mat-header-cell *matHeaderCellDef>Number of Winned Games</th>\r\n      <td mat-cell *matCellDef=\"let tournament\">{{tournament.numberOfWins}}</td>\r\n    </ng-container>\r\n    <!-- IconColumn -->\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <button mat-mini-fab color=\"accent\" (click)=\"viewTournament(row.tournamentId)\">\r\n          <i class=\"fa fa-eye\"></i>\r\n        </button>\r\n        <button mat-mini-fab color=\"primary\" (click)=\"editTournament(row.tournamentId)\" *ngIf=\"roleMatch('admin')\">\r\n          <i class=\"fa fa-pencil\"></i></button>\r\n        <button mat-mini-fab color=\"warn\" (click)=openDeleteTournamentDialog(row.tournamentId) >\r\n          <i class=\"fa fa-trash\"></i></button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"progress\">        \r\n        <th mat-header-cell *matHeaderCellDef>Progress Bar</th>\r\n        <td  mat-cell *matCellDef=\"let row\">\r\n          <mat-progress-bar mode=\"determinate\" [value]=\"row.progress\"></mat-progress-bar>\r\n        </td>\r\n    </ng-container>\r\n    \r\n    \r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n  \r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../services/shared/data.service';\nimport { TournamentTableService } from '../services/tournamnet-table.service';\nimport { TournamentDto } from '../models/tournament-table.model';\nimport { Router } from '@angular/router';\nimport { TournamentPlayer } from '../services/player.service';\n\ntype TableCell = {\n  row: number;\n  column: number;\n  checked: boolean | string;\n  playerIdByRow: number;\n};\n\n@Component({\n  selector: 'view-tournament',\n  templateUrl: './view-tournament.component.html',\n  styleUrls: ['./view-tournament.component.css']\n})\nexport class ViewTournamentComponent implements OnInit {\n\n  id: number;\n  players: any[] = [];\n  newGameList: any[] = [];\n  scoreTable: TableCell[][] = [];\n  tournament: TournamentDto;\n\n  constructor(private dataService: DataService, private editTournamentService: TournamentTableService, private router: Router, private playerService: TournamentPlayer) { }\n\n  ngOnInit(): void {\n    this.id = this.dataService.getId();\n    this.editTournamentService.getTournamentById(this.id).subscribe(x => this.onTour(x));\n  }\n\n  async onTour(tour) {\n\n    this.tournament = tour;\n    this.newGameList = this.prepareGameList(this.tournament.games);\n    const firstRow = this.newGameList[0];\n    const firstPlayerId = firstRow[0].playerGames[0].playerId;\n    const player1 = await this.playerService.getPlayerById(firstPlayerId).toPromise();\n    const firstPlayer = { id: firstPlayerId, userName: player1.userName }\n    this.players = await Promise.all([firstPlayer, ...this.newGameList[0].map(async (games) => {\n      const secondPlayerId = games.playerGames.filter(el => el.playerId !== firstPlayerId)[0].playerId;\n      const player = await this.playerService.getPlayerById(secondPlayerId).toPromise();\n      return { id: secondPlayerId, userName: player.userName };\n    })]);\n\n    this.scoreTable = this.generateInitialTable();\n    this.populateTable(this.scoreTable);\n  }\n\n  prepareGameList(games) {\n    const list = games.slice();\n    const result = [];\n    list.reverse();\n    let counter = 1;\n\n    while (list.length) {\n      const removed = list.splice(0, counter);\n      result.push(removed.reverse());\n      counter++;\n    }\n\n    return result.reverse();\n  }\n\n  generateInitialTable() {\n    const table = [];\n\n    for (let i = 0; i < this.players.length; ++i) {\n      table.push([]);\n      for (let j = 0; j < this.players.length; ++j) {\n        const obj = {\n          row: i,\n          column: j,\n          checked: i === j ? \"x\" : false,\n          playerIdByRow: 1\n        }\n        table[i].push(obj);\n      }\n    }\n    return table;\n  }\n\n  populateTable(table) {\n    for (let i = 0; i < this.players.length; i++) {\n      const listForRow = this.newGameList[i];\n      const rowPlayerId = this.players[i].id; \n      for (let j = i + 1; j < this.players.length; j++) {\n        const game = listForRow[j - i - 1];\n        const playerGame1 = game.playerGames.find(el => el.playerId === rowPlayerId);\n        const playerGame2 = game.playerGames.find(el => el.playerId !== rowPlayerId);\n        const obj = {\n          row: i,\n          column: j,\n          checked: i === j ? \"x\" : playerGame1.isWinner,\n          playerIdByRow: playerGame1.playerId,\n          id: playerGame1.gameId\n        }\n        table[i][j] = obj;\n\n        const obj2 = {\n          row: j,\n          column: i,\n          checked: i === j ? \"x\" : playerGame2.isWinner,\n          playerIdByRow: playerGame2.playerId,\n          id: playerGame2.gameId\n        }\n        table[j][i] = obj2;\n      }\n    }\n  }\n\n  routeToTournamentTablePage() {\n    this.router.navigate(['tournament-table']);\n  }\n\n}\n","<p *ngIf=\"tournament\">{{tournament.name}}</p>\n\n<div class=\"table\">\n  <div class=\"row\">\n    <div class=\"cell\"></div>\n    <div *ngFor=\"let player of players\" class=\"cell player\">\n      {{player.userName}}\n    </div>\n  </div>\n  <div *ngFor=\"let row of scoreTable; index as i;\" class=\"row\">\n    <div class=\"cell player\">\n      {{players[i].userName}}\n    </div>\n\n    <div  *ngFor=\"let cell of row; index as j\" class=\"cell\">\n      <mat-checkbox disabled=\"true\" type=\"checkbox\" *ngIf=\"cell.checked !== 'x'\" [(ngModel)]=\"cell.checked\"></mat-checkbox>\n    </div>\n  </div>\n</div>\n\n<button mat-raised-button class=\"cancel\"color=\"warn\" (click)=\"routeToTournamentTablePage()\"><i class=\"fa fa-backward\"></i> Back</button>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:'http://localhost:60907/',\n  whitelistedDomainsForSendingToken: 'localhost:60907',\n  blacklistedRoutes: 'localhost:60907/api/account/login'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}